express:
1.数据
2.中间件

-------------------------------------------------------------------------------

http-无状态

cookie、session

cookie:在浏览器保存一些数据，每次请求都会带过来
	*不安全、有限(4K)
	*校验Cookie是否被篡改,省着用
session:保存数据，保存在服务端
	*安全
--------------------------------------------------------------------------------
session:基于cookie实现的
	*cookie中会有一个session的ID,服务器利用session找到session文件、读取、写入
	隐患:session劫持
--------------------------------------------------------------------------------
cookie
1.读取————cookie-parser 能访问其子目录的cookie，但是不能访问上级的cookie
	server.use(cookieParser("签名"))
	server.use("/",function(req,res){
		req.cookies();		//未签名版
		req.signedCookies	//签名版
	})

		  req.secret("签名")
2.发送————res.cookie(名字,值,{path:"地址",maxAge:毫秒为单位,signed:true})

3.删除————res.clearCookie('name')

4.加密cookie————cookie-encrypter

---------------------------------------------------------------------------------
session:

1.cookie-session
	server.use(cookieParser())
	server.use(cookieSession({
		name:'xxxx'
		keys:[.....]
		maxAge:
	}))
	server.use('/',function(req,res){
		req.session
	})
	delete req.session
	读取:
	写入: